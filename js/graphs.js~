var gauges = [];

function createGauge(name, label, min, max){
    var config = 
	{
	    size: 120,
	    label: label,
	    min: undefined != min ? min : 0,
	    max: undefined != max ? max : 100,
	    minorTicks: 5
	}
    
    var range = config.max - config.min;
    config.yellowZones = [{ from: config.min + range*0.75, to: config.min + range*0.9 }];
    config.redZones = [{ from: config.min + range*0.9, to: config.max }];
    gauges[name] = new Gauge(name + "gage", config);
    gauges[name].render();
}

function updateGauges(key, value)
{
	gauges[key].redraw(value);
}

function othergraph(name, label, min, max){

       var svg = d3.select("#"+name+"gage")
                .append("svg:svg")
                .attr("width", 400)
                .attr("height", 400);


        var gauge = iopctrl.arcslider()
                .radius(120)
                .events(false)
                .indicator(iopctrl.defaultGaugeIndicator);
        gauge.axis().orient("in")
                .normalize(true)
                .ticks(12)
                .tickSubdivide(3)
                .tickSize(10, 8, 10)
                .tickPadding(5)
                .scale(d3.scale.linear()
                        .domain([min, max])
                        .range([-3*Math.PI/4, 3*Math.PI/4]));

        var segDisplay = iopctrl.segdisplay()
                .width(80)
                .digitCount(6)
                .negative(false)
                .decimals(0);

        svg.append("g")
                .attr("class", "segdisplay")
                .attr("transform", "translate(130, 200)")
                .call(segDisplay);

        svg.append("g")
                .attr("class", "gauge")
                .call(gauge);

        segDisplay.value(56749);
        gauge.value(92);
}
